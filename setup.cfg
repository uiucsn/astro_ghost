[metadata]
name = astro_ghost
author = Alexander Gagliano
author_email = gaglian2@illinois.edu
license = GNU GPL v3+
license_file = licenses/LICENSE.rst
url = http://astro-ghost.readthedocs.io
description = Database of supernovae and the photometric and spectroscopic properties of their host galaxies
long_description = file: README.rst
classifiers =
    Programming Language :: Python :: 3
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires = 
    astropy
    pytest
    pandas
    scikit-learn<1.3.0
    numpy
    mastcasjobs
    seaborn
    matplotlib
    joypy
    photutils
    scipy
    datetime
    requests
    imblearn
    rfpimp
    Pillow
    opencv-python
    pyvo
    astroquery
    tensorflow
    sfdmap2
    importlib_resources

[options.extras_require]
all =
test =
    pytest
    pytest-doctestplus
    pytest-cov
    pytest-astropy
docs =
    sphinx
    sphinx-automodapi
    sphinx-astropy
    sphinx-rtd-theme
    sphinx_toolbox
    sphinx_copybutton

[tool:pytest]
testpaths = "astro_ghost" "docs" "tests"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[options.package_data]
astro_ghost = 
    data/*
    Star_Galaxy_RealisticModel_GHOST_PS1ClassLabels.sav
    tonry_ps1_locus.txt
    gwgc_good.csv

[coverage:run]
omit =
  astro_ghost/__init*
  astro_ghost/conftest.py
  astro_ghost/*setup_package*
  #astro_ghost/tests/*
  #astro_ghost/*/tests/*
  astro_ghost/extern/*
  astro_ghost/version*
  */astro_ghost/__init*
  */astro_ghost/conftest.py
  */astro_ghost/*setup_package*
  #*/astro_ghost/tests/*
  #*/astro_ghost/*/tests/*
  */astro_ghost/extern/*
  */astro_ghost/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
